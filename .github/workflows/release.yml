name: Release affected libraries

on: push

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Wait for tests to succeed
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.ref }}
          check-name: 'Build'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Track main
        run: git branch --track main origin/main || echo "Already done"

      - name: 'Derive appropriate SHAs for base and head for `nx affected` commands'
        uses: nrwl/nx-set-shas@v3

      - run: |
          echo "BASE: ${{ env.NX_BASE }}"
          echo "HEAD: ${{ env.NX_HEAD }}"

      - name: Setup LTS Node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'yarn'

      - name: Install yarn
        shell: base
        run: npm install -g yarn

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Cache yarn dependencies
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **\node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build_files
          path: dist

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: dist
